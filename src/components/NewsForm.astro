---
interface Props {
  id?: string;
  title?: string;
  slug?: string;
  content?: string;
  status?: string;
}

const {
  id = "",
  title = "",
  slug = "",
  content = "",
  status = "草稿"
} = Astro.props;

const isNew = !id;
---

<form class="news-form">
  <input type="hidden" id="newsId" name="id" value={id}>
  
  <div class="form-group">
    <label for="title">标题</label>
    <input type="text" id="title" name="title" value={title} required>
  </div>
  
  <div class="form-group">
    <label for="slug">URL标识</label>
    <input type="text" id="slug" name="slug" value={slug} required>
    <small>用于URL的唯一标识，例如: my-news-title</small>
  </div>
  
  <div class="form-group">
    <label for="content">内容</label>
    <textarea id="content" name="content" rows="15" required>{content}</textarea>
    <small>支持HTML格式</small>
  </div>
  
  <div class="form-group">
    <label for="status">状态</label>
    <select id="status" name="status">
      <option value="草稿" selected={status === "草稿"}>草稿</option>
      <option value="已发布" selected={status === "已发布"}>发布</option>
    </select>
  </div>
  
  <div class="form-actions">
    <button type="button" id="previewBtn" class="btn btn-secondary">预览</button>
    <button type="submit" class="btn btn-primary">保存</button>
    <a href="/admin/dashboard" class="btn btn-danger">取消</a>
  </div>
</form>

<div id="previewSection" class="preview-section" style="display: none;">
  <div class="preview-header">
    <h3>预览</h3>
    <button id="closePreviewBtn" class="btn">关闭预览</button>
  </div>
  <div class="preview-content">
    <h1 id="previewTitle"></h1>
    <div id="previewBody"></div>
  </div>
</div>

<script>
  // 自动生成 slug
  const titleInput = document.getElementById('title');
  const slugInput = document.getElementById('slug');
  
  titleInput?.addEventListener('blur', function() {
    if (slugInput.value === '') {
      // 生成 slug：转小写，替换空格为连字符，移除特殊字符
      const slug = this.value.toLowerCase()
        .replace(/\s+/g, '-')
        .replace(/[^\w\-]+/g, '')
        .replace(/\-\-+/g, '-')
        .replace(/^-+/, '')
        .replace(/-+$/, '');
      
      slugInput.value = slug;
    }
  });

  // 预览功能
  const previewBtn = document.getElementById('previewBtn');
  const closePreviewBtn = document.getElementById('closePreviewBtn');
  const previewSection = document.getElementById('previewSection');
  const previewTitle = document.getElementById('previewTitle');
  const previewBody = document.getElementById('previewBody');
  
  previewBtn?.addEventListener('click', function() {
    const title = document.getElementById('title').value;
    const content = document.getElementById('content').value;
    
    previewTitle.textContent = title;
    previewBody.innerHTML = content;
    previewSection.style.display = 'block';
    
    // 滚动到预览区域
    previewSection.scrollIntoView({ behavior: 'smooth' });
  });
  
  closePreviewBtn?.addEventListener('click', function() {
    previewSection.style.display = 'none';
  });

  // 表单提交
  const newsForm = document.querySelector('.news-form');
  
  newsForm?.addEventListener('submit', function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    const data = Object.fromEntries(formData.entries());
    
    // 在实际应用中，这里会发送请求到服务器保存内容
    // 这里只是模拟保存成功
    console.log('保存内容:', data);
    alert('内容已保存');
    
    // 重定向到控制面板
    window.location.href = '/admin/dashboard';
  });
</script>

<style>
  .news-form {
    background-color: white;
    border-radius: 8px;
    padding: 1.5rem;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
  }

  .form-group {
    margin-bottom: 1.5rem;
  }

  label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: bold;
  }

  input, textarea, select {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 1rem;
  }

  textarea {
    resize: vertical;
    min-height: 200px;
  }

  small {
    display: block;
    margin-top: 0.25rem;
    color: #666;
    font-size: 0.85rem;
  }

  .form-actions {
    display: flex;
    gap: 1rem;
    margin-top: 2rem;
  }

  .preview-section {
    margin-top: 2rem;
    background-color: white;
    border-radius: 8px;
    padding: 1.5rem;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
  }

  .preview-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid #ddd;
  }

  .preview-header h3 {
    margin: 0;
  }

  .preview-content {
    padding: 1rem;
    border: 1px solid #ddd;
    border-radius: 4px;
    background-color: #f9f9f9;
  }
</style>